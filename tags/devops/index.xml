<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on L&#39;s Blog</title>
    <link>/tags/devops/</link>
    <description>Recent content in DevOps on L&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>源代码分支管理模式</title>
      <link>/post/branching-patterns/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/branching-patterns/</guid>
      <description>现代的源代码控制系统提供了强大的工具，可以非常轻松的在源代码上创建分支。但最终分支还是要合并在一起，许多团队不得不花相当多的时间去处理相互纠</description>
    </item>
    
    <item>
      <title>GitLab Flow工作流介绍</title>
      <link>/post/gitlab-flow-introduce/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gitlab-flow-introduce/</guid>
      <description>原文链接：Sep 29, 2014 - Sytse Sijbrandij,GitLab Flow 相较于SVN这样较旧的版本控制系统而言，使用git进行版本管理使得分支和合并操作变得更加容易。 它允许各种类型的分</description>
    </item>
    
    <item>
      <title>Git的代码分支策略实践</title>
      <link>/post/github-flow-practice/</link>
      <pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/github-flow-practice/</guid>
      <description>目前主流的git工作流模式有git flow、github flow、gitlab flow这几种，采用不同的代码分支策略，意味着实施不同的代码集</description>
    </item>
    
  </channel>
</rss>